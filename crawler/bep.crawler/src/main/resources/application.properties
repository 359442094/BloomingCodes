server.port=9690
# Maximum amount of worker threads.
server.tomcat.max-threads=300
server.maxHttpHeaderSize =1024000
eureka.instance.prefer-ip-address=true

#切换数据库
#spring.profiles.active = sit

rpcservice.name.cn.blooming.bep.fund.api=BloomingAccountService

eureka.instance.instance-id=${eureka.instance.ip-address}:${server.port}

eureka.instance.lease-expiration-duration-in-seconds=2

eureka.instance.lease-renewal-interval-in-seconds=1

#spring.sleuth.enabled=true

#spring.zipkin.baseUrl=http://127.0.0.1:9411

#spring.zipkin.enabled=true

spring.datasource.driverClassName = com.mysql.jdbc.Driver
#jdbc:mysql:192.168.1.129/3306/eaccount_platform_dev
spring.datasource.url=jdbc:mysql:192.168.1.129/3306/eaccount_platform_dev2

spring.datasource.data-username=sk

spring.datasource.data-password=skwl123456

## 最小空闲连接数量
spring.datasource.hikari.minimum-idle=5
## 空闲连接存活最大时间，默认600000（10分钟）
spring.datasource.hikari.idle-timeout=180000
## 连接池最大连接数，默认是10
spring.datasource.hikari.maximum-pool-size=200
## 此属性控制从池返回的连接的默认自动提交行为,默认值：true
spring.datasource.hikari.auto-commit=true
## 连接池母子
spring.datasource.hikari.pool-name=DefaultHikariCP
## 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
spring.datasource.hikari.max-lifetime=1800000
## 数据库连接超时时间,默认30秒，即30000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1

mybatis.mapperLocations=classpath*:cn/blooming/bep/**/*Mapper.xml

mybatis.configuration.call-setters-on-nulls=true

# ZK相关的配置保存在bootstrap.properties

# kafka
#spring.kafka.bootstrap-servers=127.0.0.1:9092
#spring.kafka.consumer.group-id=springboot-group1
#spring.kafka.consumer.auto-offset-reset=earliest


#出现错误时, 直接抛出异常
spring.mvc.throw-exception-if-no-handler-found=true
#不要为我们工程中的资源文件建立映射
spring.resources.add-mappings=false

JedisConfig.type=cluster

redis.cache.ip=192.168.1.129
redis.cache.port=6379

#连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true
redis.cache.blockWhenExhausted=true
#设置的逐出策略类名, 默认DefaultEvictionPolicy(当连接超过最大空闲时间,或连接数超过最大空闲连接数)
redis.cache.evictionPolicyClassName=org.apache.commons.pool2.impl.DefaultEvictionPolicy
#是否启用pool的jmx管理功能, 默认true
redis.cache.jmxEnabled=true
#默认为pool
redis.cache.jmxNamePrefix=pool
#是否启用后进先出, 默认true
redis.cache.lifo=true
#最大空闲连接数, 默认8个
redis.cache.maxIdle=8
#最大连接数, 默认8个
redis.cache.maxTotal=200
#最小空闲连接数, 默认0
redis.cache.minIdle=0
#获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1
redis.cache.maxWaitMillis=-1
#逐出连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.cache.mainEvictableIdleTimeMillis=1800000
#每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3
redis.cache.numTestsPerEvictionRun=3
#对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)   
redis.cache.softMinEvictableIdleTimeMillis=1800000
#在获取连接的时候检查有效性, 默认false
redis.cache.testOnBorrow=false
#在空闲时检查有效性, 默认false
redis.cache.testWhileIdle=false
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.cache.timeBetweenEvictionRunsMillis=-1
#重试次数
redis.cache.maxAttempts=5
#超时时间
redis.cache.commandTimeout=2000

### xxl-job executor address 192.168.1.113
xxl.job.executor.appname=crawler
xxl.job.executor.ip=
xxl.job.executor.port=10010

### xxl-job, access token
xxl.job.accessToken=

### xxl-job log path
xxl.job.executor.logpath=/data/applogs/xxl-job/jobhandler
### xxl-job log retention days
xxl.job.executor.logretentiondays=-1

rpcservice.name.cn.blooming.bep.baseservice.api=BankGatewayService

# 设置时区
spring.jackson.time-zone=GMT+8

# eureka的admin功能需要从spring应用查询应用状态，所需要的URL以/admimn-monitor开头，不能做自定义封装
response.wrapper.adminUrlSkipPrefix=/admin-monitor

# 禁用Eureka
#eureka.client.enabled=true

#eureka.client.register-with-eureka=false

#eureka.client.fetch-registry=false


# ==================== spring cloud admin ==========================
management.endpoint.shutdown.enabled=true

spring.boot.admin.client.enabled=true
# 加载所有的端点/默认只加载了 info / health
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=env
# 比较重要,默认 /actuator spring-boot-admin 扫描不到
management.endpoints.web.base-path=/admin-monitor/

management.endpoint.health.show-details=always

spring.boot.admin.client.instance.service-base-url=http://${eureka.instance.ip-address}:${server.port}/

spring.boot.admin.client.url=http://localhost:9401/admin
# 不配置老喜欢用主机名，看着不舒服....
spring.boot.admin.client.instance.prefer-ip=true

info.version=@project.version@
info.name=@project.artifactId@
# ================================================================

# 银行logo图片地址
bank.image.urlprefix=http://192.168.1.130/bep/bankImage/
