package cn.blooming.bep.crawler.model.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FundHistoryExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public FundHistoryExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andCodeIsNull() {
			addCriterion("code is null");
			return (Criteria) this;
		}

		public Criteria andCodeIsNotNull() {
			addCriterion("code is not null");
			return (Criteria) this;
		}

		public Criteria andCodeEqualTo(String value) {
			addCriterion("code =", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotEqualTo(String value) {
			addCriterion("code <>", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThan(String value) {
			addCriterion("code >", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThanOrEqualTo(String value) {
			addCriterion("code >=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThan(String value) {
			addCriterion("code <", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThanOrEqualTo(String value) {
			addCriterion("code <=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLike(String value) {
			addCriterion("code like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotLike(String value) {
			addCriterion("code not like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeIn(List<String> values) {
			addCriterion("code in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotIn(List<String> values) {
			addCriterion("code not in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeBetween(String value1, String value2) {
			addCriterion("code between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotBetween(String value1, String value2) {
			addCriterion("code not between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andDateIsNull() {
			addCriterion("date is null");
			return (Criteria) this;
		}

		public Criteria andDateIsNotNull() {
			addCriterion("date is not null");
			return (Criteria) this;
		}

		public Criteria andDateEqualTo(Date value) {
			addCriterionForJDBCDate("date =", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("date <>", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateGreaterThan(Date value) {
			addCriterionForJDBCDate("date >", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("date >=", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateLessThan(Date value) {
			addCriterionForJDBCDate("date <", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("date <=", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateIn(List<Date> values) {
			addCriterionForJDBCDate("date in", values, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("date not in", values, "date");
			return (Criteria) this;
		}

		public Criteria andDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("date between", value1, value2, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("date not between", value1, value2, "date");
			return (Criteria) this;
		}

		public Criteria andNetValueIsNull() {
			addCriterion("net_value is null");
			return (Criteria) this;
		}

		public Criteria andNetValueIsNotNull() {
			addCriterion("net_value is not null");
			return (Criteria) this;
		}

		public Criteria andNetValueEqualTo(BigDecimal value) {
			addCriterion("net_value =", value, "netValue");
			return (Criteria) this;
		}

		public Criteria andNetValueNotEqualTo(BigDecimal value) {
			addCriterion("net_value <>", value, "netValue");
			return (Criteria) this;
		}

		public Criteria andNetValueGreaterThan(BigDecimal value) {
			addCriterion("net_value >", value, "netValue");
			return (Criteria) this;
		}

		public Criteria andNetValueGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("net_value >=", value, "netValue");
			return (Criteria) this;
		}

		public Criteria andNetValueLessThan(BigDecimal value) {
			addCriterion("net_value <", value, "netValue");
			return (Criteria) this;
		}

		public Criteria andNetValueLessThanOrEqualTo(BigDecimal value) {
			addCriterion("net_value <=", value, "netValue");
			return (Criteria) this;
		}

		public Criteria andNetValueIn(List<BigDecimal> values) {
			addCriterion("net_value in", values, "netValue");
			return (Criteria) this;
		}

		public Criteria andNetValueNotIn(List<BigDecimal> values) {
			addCriterion("net_value not in", values, "netValue");
			return (Criteria) this;
		}

		public Criteria andNetValueBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("net_value between", value1, value2, "netValue");
			return (Criteria) this;
		}

		public Criteria andNetValueNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("net_value not between", value1, value2, "netValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueIsNull() {
			addCriterion("total_value is null");
			return (Criteria) this;
		}

		public Criteria andTotalValueIsNotNull() {
			addCriterion("total_value is not null");
			return (Criteria) this;
		}

		public Criteria andTotalValueEqualTo(BigDecimal value) {
			addCriterion("total_value =", value, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueNotEqualTo(BigDecimal value) {
			addCriterion("total_value <>", value, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueGreaterThan(BigDecimal value) {
			addCriterion("total_value >", value, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("total_value >=", value, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueLessThan(BigDecimal value) {
			addCriterion("total_value <", value, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueLessThanOrEqualTo(BigDecimal value) {
			addCriterion("total_value <=", value, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueIn(List<BigDecimal> values) {
			addCriterion("total_value in", values, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueNotIn(List<BigDecimal> values) {
			addCriterion("total_value not in", values, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("total_value between", value1, value2, "totalValue");
			return (Criteria) this;
		}

		public Criteria andTotalValueNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("total_value not between", value1, value2, "totalValue");
			return (Criteria) this;
		}

		public Criteria andRateNetValueIsNull() {
			addCriterion("rate_net_value is null");
			return (Criteria) this;
		}

		public Criteria andRateNetValueIsNotNull() {
			addCriterion("rate_net_value is not null");
			return (Criteria) this;
		}

		public Criteria andRateNetValueEqualTo(BigDecimal value) {
			addCriterion("rate_net_value =", value, "rateNetValue");
			return (Criteria) this;
		}

		public Criteria andRateNetValueNotEqualTo(BigDecimal value) {
			addCriterion("rate_net_value <>", value, "rateNetValue");
			return (Criteria) this;
		}

		public Criteria andRateNetValueGreaterThan(BigDecimal value) {
			addCriterion("rate_net_value >", value, "rateNetValue");
			return (Criteria) this;
		}

		public Criteria andRateNetValueGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("rate_net_value >=", value, "rateNetValue");
			return (Criteria) this;
		}

		public Criteria andRateNetValueLessThan(BigDecimal value) {
			addCriterion("rate_net_value <", value, "rateNetValue");
			return (Criteria) this;
		}

		public Criteria andRateNetValueLessThanOrEqualTo(BigDecimal value) {
			addCriterion("rate_net_value <=", value, "rateNetValue");
			return (Criteria) this;
		}

		public Criteria andRateNetValueIn(List<BigDecimal> values) {
			addCriterion("rate_net_value in", values, "rateNetValue");
			return (Criteria) this;
		}

		public Criteria andRateNetValueNotIn(List<BigDecimal> values) {
			addCriterion("rate_net_value not in", values, "rateNetValue");
			return (Criteria) this;
		}

		public Criteria andRateNetValueBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("rate_net_value between", value1, value2, "rateNetValue");
			return (Criteria) this;
		}

		public Criteria andRateNetValueNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("rate_net_value not between", value1, value2, "rateNetValue");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table fund_history
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	protected String limitOne;

	public String getLimitOne() {
		return limitOne;
	}

	public void setLimitOne(String limitOne) {
		this.limitOne = limitOne;
	}

	public void setOredCriteria(List<Criteria> oredCriteria) {
		this.oredCriteria = oredCriteria;
	}

	@Override
	public String toString() {
		return "FundHistoryExample{" +
				"orderByClause='" + orderByClause + '\'' +
				", distinct=" + distinct +
				", oredCriteria=" + oredCriteria +
				'}';
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fund_history
     *
     * @mbg.generated do_not_delete_during_merge Wed Dec 19 16:01:36 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}