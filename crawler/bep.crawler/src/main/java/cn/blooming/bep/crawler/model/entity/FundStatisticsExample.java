package cn.blooming.bep.crawler.model.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Iterator;

public class FundStatisticsExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public FundStatisticsExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andFundTypeIsNull() {
			addCriterion("fund_type is null");
			return (Criteria) this;
		}

		public Criteria andFundTypeIsNotNull() {
			addCriterion("fund_type is not null");
			return (Criteria) this;
		}

		public Criteria andFundTypeEqualTo(String value) {
			addCriterion("fund_type =", value, "fundType");
			return (Criteria) this;
		}

		public Criteria andFundTypeNotEqualTo(String value) {
			addCriterion("fund_type <>", value, "fundType");
			return (Criteria) this;
		}

		public Criteria andFundTypeGreaterThan(String value) {
			addCriterion("fund_type >", value, "fundType");
			return (Criteria) this;
		}

		public Criteria andFundTypeGreaterThanOrEqualTo(String value) {
			addCriterion("fund_type >=", value, "fundType");
			return (Criteria) this;
		}

		public Criteria andFundTypeLessThan(String value) {
			addCriterion("fund_type <", value, "fundType");
			return (Criteria) this;
		}

		public Criteria andFundTypeLessThanOrEqualTo(String value) {
			addCriterion("fund_type <=", value, "fundType");
			return (Criteria) this;
		}

		public Criteria andFundTypeLike(String value) {
			addCriterion("fund_type like", value, "fundType");
			return (Criteria) this;
		}

		public Criteria andFundTypeNotLike(String value) {
			addCriterion("fund_type not like", value, "fundType");
			return (Criteria) this;
		}

		public Criteria andFundTypeIn(List<String> values) {
			addCriterion("fund_type in", values, "fundType");
			return (Criteria) this;
		}

		public Criteria andFundTypeNotIn(List<String> values) {
			addCriterion("fund_type not in", values, "fundType");
			return (Criteria) this;
		}

		public Criteria andFundTypeBetween(String value1, String value2) {
			addCriterion("fund_type between", value1, value2, "fundType");
			return (Criteria) this;
		}

		public Criteria andFundTypeNotBetween(String value1, String value2) {
			addCriterion("fund_type not between", value1, value2, "fundType");
			return (Criteria) this;
		}

		public Criteria andDateIsNull() {
			addCriterion("date is null");
			return (Criteria) this;
		}

		public Criteria andDateIsNotNull() {
			addCriterion("date is not null");
			return (Criteria) this;
		}

		public Criteria andDateEqualTo(Date value) {
			addCriterionForJDBCDate("date =", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("date <>", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateGreaterThan(Date value) {
			addCriterionForJDBCDate("date >", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("date >=", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateLessThan(Date value) {
			addCriterionForJDBCDate("date <", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("date <=", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateIn(List<Date> values) {
			addCriterionForJDBCDate("date in", values, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("date not in", values, "date");
			return (Criteria) this;
		}

		public Criteria andDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("date between", value1, value2, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("date not between", value1, value2, "date");
			return (Criteria) this;
		}

		public Criteria andAverageIsNull() {
			addCriterion("average is null");
			return (Criteria) this;
		}

		public Criteria andAverageIsNotNull() {
			addCriterion("average is not null");
			return (Criteria) this;
		}

		public Criteria andAverageEqualTo(BigDecimal value) {
			addCriterion("average =", value, "average");
			return (Criteria) this;
		}

		public Criteria andAverageNotEqualTo(BigDecimal value) {
			addCriterion("average <>", value, "average");
			return (Criteria) this;
		}

		public Criteria andAverageGreaterThan(BigDecimal value) {
			addCriterion("average >", value, "average");
			return (Criteria) this;
		}

		public Criteria andAverageGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("average >=", value, "average");
			return (Criteria) this;
		}

		public Criteria andAverageLessThan(BigDecimal value) {
			addCriterion("average <", value, "average");
			return (Criteria) this;
		}

		public Criteria andAverageLessThanOrEqualTo(BigDecimal value) {
			addCriterion("average <=", value, "average");
			return (Criteria) this;
		}

		public Criteria andAverageIn(List<BigDecimal> values) {
			addCriterion("average in", values, "average");
			return (Criteria) this;
		}

		public Criteria andAverageNotIn(List<BigDecimal> values) {
			addCriterion("average not in", values, "average");
			return (Criteria) this;
		}

		public Criteria andAverageBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average between", value1, value2, "average");
			return (Criteria) this;
		}

		public Criteria andAverageNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average not between", value1, value2, "average");
			return (Criteria) this;
		}

		public Criteria andRateIsNull() {
			addCriterion("rate is null");
			return (Criteria) this;
		}

		public Criteria andRateIsNotNull() {
			addCriterion("rate is not null");
			return (Criteria) this;
		}

		public Criteria andRateEqualTo(BigDecimal value) {
			addCriterion("rate =", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateNotEqualTo(BigDecimal value) {
			addCriterion("rate <>", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateGreaterThan(BigDecimal value) {
			addCriterion("rate >", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("rate >=", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateLessThan(BigDecimal value) {
			addCriterion("rate <", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateLessThanOrEqualTo(BigDecimal value) {
			addCriterion("rate <=", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateIn(List<BigDecimal> values) {
			addCriterion("rate in", values, "rate");
			return (Criteria) this;
		}

		public Criteria andRateNotIn(List<BigDecimal> values) {
			addCriterion("rate not in", values, "rate");
			return (Criteria) this;
		}

		public Criteria andRateBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("rate between", value1, value2, "rate");
			return (Criteria) this;
		}

		public Criteria andRateNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("rate not between", value1, value2, "rate");
			return (Criteria) this;
		}

		public Criteria andUpdatedIsNull() {
			addCriterion("updated is null");
			return (Criteria) this;
		}

		public Criteria andUpdatedIsNotNull() {
			addCriterion("updated is not null");
			return (Criteria) this;
		}

		public Criteria andUpdatedEqualTo(Date value) {
			addCriterion("updated =", value, "updated");
			return (Criteria) this;
		}

		public Criteria andUpdatedNotEqualTo(Date value) {
			addCriterion("updated <>", value, "updated");
			return (Criteria) this;
		}

		public Criteria andUpdatedGreaterThan(Date value) {
			addCriterion("updated >", value, "updated");
			return (Criteria) this;
		}

		public Criteria andUpdatedGreaterThanOrEqualTo(Date value) {
			addCriterion("updated >=", value, "updated");
			return (Criteria) this;
		}

		public Criteria andUpdatedLessThan(Date value) {
			addCriterion("updated <", value, "updated");
			return (Criteria) this;
		}

		public Criteria andUpdatedLessThanOrEqualTo(Date value) {
			addCriterion("updated <=", value, "updated");
			return (Criteria) this;
		}

		public Criteria andUpdatedIn(List<Date> values) {
			addCriterion("updated in", values, "updated");
			return (Criteria) this;
		}

		public Criteria andUpdatedNotIn(List<Date> values) {
			addCriterion("updated not in", values, "updated");
			return (Criteria) this;
		}

		public Criteria andUpdatedBetween(Date value1, Date value2) {
			addCriterion("updated between", value1, value2, "updated");
			return (Criteria) this;
		}

		public Criteria andUpdatedNotBetween(Date value1, Date value2) {
			addCriterion("updated not between", value1, value2, "updated");
			return (Criteria) this;
		}

		public Criteria andAverage7daysIsNull() {
			addCriterion("average_7days is null");
			return (Criteria) this;
		}

		public Criteria andAverage7daysIsNotNull() {
			addCriterion("average_7days is not null");
			return (Criteria) this;
		}

		public Criteria andAverage7daysEqualTo(BigDecimal value) {
			addCriterion("average_7days =", value, "average7days");
			return (Criteria) this;
		}

		public Criteria andAverage7daysNotEqualTo(BigDecimal value) {
			addCriterion("average_7days <>", value, "average7days");
			return (Criteria) this;
		}

		public Criteria andAverage7daysGreaterThan(BigDecimal value) {
			addCriterion("average_7days >", value, "average7days");
			return (Criteria) this;
		}

		public Criteria andAverage7daysGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("average_7days >=", value, "average7days");
			return (Criteria) this;
		}

		public Criteria andAverage7daysLessThan(BigDecimal value) {
			addCriterion("average_7days <", value, "average7days");
			return (Criteria) this;
		}

		public Criteria andAverage7daysLessThanOrEqualTo(BigDecimal value) {
			addCriterion("average_7days <=", value, "average7days");
			return (Criteria) this;
		}

		public Criteria andAverage7daysIn(List<BigDecimal> values) {
			addCriterion("average_7days in", values, "average7days");
			return (Criteria) this;
		}

		public Criteria andAverage7daysNotIn(List<BigDecimal> values) {
			addCriterion("average_7days not in", values, "average7days");
			return (Criteria) this;
		}

		public Criteria andAverage7daysBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_7days between", value1, value2, "average7days");
			return (Criteria) this;
		}

		public Criteria andAverage7daysNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_7days not between", value1, value2, "average7days");
			return (Criteria) this;
		}

		public Criteria andAverage1monthIsNull() {
			addCriterion("average_1month is null");
			return (Criteria) this;
		}

		public Criteria andAverage1monthIsNotNull() {
			addCriterion("average_1month is not null");
			return (Criteria) this;
		}

		public Criteria andAverage1monthEqualTo(BigDecimal value) {
			addCriterion("average_1month =", value, "average1month");
			return (Criteria) this;
		}

		public Criteria andAverage1monthNotEqualTo(BigDecimal value) {
			addCriterion("average_1month <>", value, "average1month");
			return (Criteria) this;
		}

		public Criteria andAverage1monthGreaterThan(BigDecimal value) {
			addCriterion("average_1month >", value, "average1month");
			return (Criteria) this;
		}

		public Criteria andAverage1monthGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("average_1month >=", value, "average1month");
			return (Criteria) this;
		}

		public Criteria andAverage1monthLessThan(BigDecimal value) {
			addCriterion("average_1month <", value, "average1month");
			return (Criteria) this;
		}

		public Criteria andAverage1monthLessThanOrEqualTo(BigDecimal value) {
			addCriterion("average_1month <=", value, "average1month");
			return (Criteria) this;
		}

		public Criteria andAverage1monthIn(List<BigDecimal> values) {
			addCriterion("average_1month in", values, "average1month");
			return (Criteria) this;
		}

		public Criteria andAverage1monthNotIn(List<BigDecimal> values) {
			addCriterion("average_1month not in", values, "average1month");
			return (Criteria) this;
		}

		public Criteria andAverage1monthBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_1month between", value1, value2, "average1month");
			return (Criteria) this;
		}

		public Criteria andAverage1monthNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_1month not between", value1, value2, "average1month");
			return (Criteria) this;
		}

		public Criteria andAverage3monthIsNull() {
			addCriterion("average_3month is null");
			return (Criteria) this;
		}

		public Criteria andAverage3monthIsNotNull() {
			addCriterion("average_3month is not null");
			return (Criteria) this;
		}

		public Criteria andAverage3monthEqualTo(BigDecimal value) {
			addCriterion("average_3month =", value, "average3month");
			return (Criteria) this;
		}

		public Criteria andAverage3monthNotEqualTo(BigDecimal value) {
			addCriterion("average_3month <>", value, "average3month");
			return (Criteria) this;
		}

		public Criteria andAverage3monthGreaterThan(BigDecimal value) {
			addCriterion("average_3month >", value, "average3month");
			return (Criteria) this;
		}

		public Criteria andAverage3monthGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("average_3month >=", value, "average3month");
			return (Criteria) this;
		}

		public Criteria andAverage3monthLessThan(BigDecimal value) {
			addCriterion("average_3month <", value, "average3month");
			return (Criteria) this;
		}

		public Criteria andAverage3monthLessThanOrEqualTo(BigDecimal value) {
			addCriterion("average_3month <=", value, "average3month");
			return (Criteria) this;
		}

		public Criteria andAverage3monthIn(List<BigDecimal> values) {
			addCriterion("average_3month in", values, "average3month");
			return (Criteria) this;
		}

		public Criteria andAverage3monthNotIn(List<BigDecimal> values) {
			addCriterion("average_3month not in", values, "average3month");
			return (Criteria) this;
		}

		public Criteria andAverage3monthBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_3month between", value1, value2, "average3month");
			return (Criteria) this;
		}

		public Criteria andAverage3monthNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_3month not between", value1, value2, "average3month");
			return (Criteria) this;
		}

		public Criteria andAverage6monthIsNull() {
			addCriterion("average_6month is null");
			return (Criteria) this;
		}

		public Criteria andAverage6monthIsNotNull() {
			addCriterion("average_6month is not null");
			return (Criteria) this;
		}

		public Criteria andAverage6monthEqualTo(BigDecimal value) {
			addCriterion("average_6month =", value, "average6month");
			return (Criteria) this;
		}

		public Criteria andAverage6monthNotEqualTo(BigDecimal value) {
			addCriterion("average_6month <>", value, "average6month");
			return (Criteria) this;
		}

		public Criteria andAverage6monthGreaterThan(BigDecimal value) {
			addCriterion("average_6month >", value, "average6month");
			return (Criteria) this;
		}

		public Criteria andAverage6monthGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("average_6month >=", value, "average6month");
			return (Criteria) this;
		}

		public Criteria andAverage6monthLessThan(BigDecimal value) {
			addCriterion("average_6month <", value, "average6month");
			return (Criteria) this;
		}

		public Criteria andAverage6monthLessThanOrEqualTo(BigDecimal value) {
			addCriterion("average_6month <=", value, "average6month");
			return (Criteria) this;
		}

		public Criteria andAverage6monthIn(List<BigDecimal> values) {
			addCriterion("average_6month in", values, "average6month");
			return (Criteria) this;
		}

		public Criteria andAverage6monthNotIn(List<BigDecimal> values) {
			addCriterion("average_6month not in", values, "average6month");
			return (Criteria) this;
		}

		public Criteria andAverage6monthBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_6month between", value1, value2, "average6month");
			return (Criteria) this;
		}

		public Criteria andAverage6monthNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_6month not between", value1, value2, "average6month");
			return (Criteria) this;
		}

		public Criteria andAverage1yearIsNull() {
			addCriterion("average_1year is null");
			return (Criteria) this;
		}

		public Criteria andAverage1yearIsNotNull() {
			addCriterion("average_1year is not null");
			return (Criteria) this;
		}

		public Criteria andAverage1yearEqualTo(BigDecimal value) {
			addCriterion("average_1year =", value, "average1year");
			return (Criteria) this;
		}

		public Criteria andAverage1yearNotEqualTo(BigDecimal value) {
			addCriterion("average_1year <>", value, "average1year");
			return (Criteria) this;
		}

		public Criteria andAverage1yearGreaterThan(BigDecimal value) {
			addCriterion("average_1year >", value, "average1year");
			return (Criteria) this;
		}

		public Criteria andAverage1yearGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("average_1year >=", value, "average1year");
			return (Criteria) this;
		}

		public Criteria andAverage1yearLessThan(BigDecimal value) {
			addCriterion("average_1year <", value, "average1year");
			return (Criteria) this;
		}

		public Criteria andAverage1yearLessThanOrEqualTo(BigDecimal value) {
			addCriterion("average_1year <=", value, "average1year");
			return (Criteria) this;
		}

		public Criteria andAverage1yearIn(List<BigDecimal> values) {
			addCriterion("average_1year in", values, "average1year");
			return (Criteria) this;
		}

		public Criteria andAverage1yearNotIn(List<BigDecimal> values) {
			addCriterion("average_1year not in", values, "average1year");
			return (Criteria) this;
		}

		public Criteria andAverage1yearBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_1year between", value1, value2, "average1year");
			return (Criteria) this;
		}

		public Criteria andAverage1yearNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_1year not between", value1, value2, "average1year");
			return (Criteria) this;
		}

		public Criteria andAverage2yearIsNull() {
			addCriterion("average_2year is null");
			return (Criteria) this;
		}

		public Criteria andAverage2yearIsNotNull() {
			addCriterion("average_2year is not null");
			return (Criteria) this;
		}

		public Criteria andAverage2yearEqualTo(BigDecimal value) {
			addCriterion("average_2year =", value, "average2year");
			return (Criteria) this;
		}

		public Criteria andAverage2yearNotEqualTo(BigDecimal value) {
			addCriterion("average_2year <>", value, "average2year");
			return (Criteria) this;
		}

		public Criteria andAverage2yearGreaterThan(BigDecimal value) {
			addCriterion("average_2year >", value, "average2year");
			return (Criteria) this;
		}

		public Criteria andAverage2yearGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("average_2year >=", value, "average2year");
			return (Criteria) this;
		}

		public Criteria andAverage2yearLessThan(BigDecimal value) {
			addCriterion("average_2year <", value, "average2year");
			return (Criteria) this;
		}

		public Criteria andAverage2yearLessThanOrEqualTo(BigDecimal value) {
			addCriterion("average_2year <=", value, "average2year");
			return (Criteria) this;
		}

		public Criteria andAverage2yearIn(List<BigDecimal> values) {
			addCriterion("average_2year in", values, "average2year");
			return (Criteria) this;
		}

		public Criteria andAverage2yearNotIn(List<BigDecimal> values) {
			addCriterion("average_2year not in", values, "average2year");
			return (Criteria) this;
		}

		public Criteria andAverage2yearBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_2year between", value1, value2, "average2year");
			return (Criteria) this;
		}

		public Criteria andAverage2yearNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_2year not between", value1, value2, "average2year");
			return (Criteria) this;
		}

		public Criteria andAverage3yearIsNull() {
			addCriterion("average_3year is null");
			return (Criteria) this;
		}

		public Criteria andAverage3yearIsNotNull() {
			addCriterion("average_3year is not null");
			return (Criteria) this;
		}

		public Criteria andAverage3yearEqualTo(BigDecimal value) {
			addCriterion("average_3year =", value, "average3year");
			return (Criteria) this;
		}

		public Criteria andAverage3yearNotEqualTo(BigDecimal value) {
			addCriterion("average_3year <>", value, "average3year");
			return (Criteria) this;
		}

		public Criteria andAverage3yearGreaterThan(BigDecimal value) {
			addCriterion("average_3year >", value, "average3year");
			return (Criteria) this;
		}

		public Criteria andAverage3yearGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("average_3year >=", value, "average3year");
			return (Criteria) this;
		}

		public Criteria andAverage3yearLessThan(BigDecimal value) {
			addCriterion("average_3year <", value, "average3year");
			return (Criteria) this;
		}

		public Criteria andAverage3yearLessThanOrEqualTo(BigDecimal value) {
			addCriterion("average_3year <=", value, "average3year");
			return (Criteria) this;
		}

		public Criteria andAverage3yearIn(List<BigDecimal> values) {
			addCriterion("average_3year in", values, "average3year");
			return (Criteria) this;
		}

		public Criteria andAverage3yearNotIn(List<BigDecimal> values) {
			addCriterion("average_3year not in", values, "average3year");
			return (Criteria) this;
		}

		public Criteria andAverage3yearBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_3year between", value1, value2, "average3year");
			return (Criteria) this;
		}

		public Criteria andAverage3yearNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("average_3year not between", value1, value2, "average3year");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table fund_statistics
	 * @mbg.generated  Thu Jan 10 14:50:37 CST 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fund_statistics
     *
     * @mbg.generated do_not_delete_during_merge Tue Jan 08 11:05:02 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}